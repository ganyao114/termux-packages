Subject: [PATCH] patch for winemu
---
Index: dlls/winex11.drv/keyboard.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dlls/winex11.drv/keyboard.c b/dlls/winex11.drv/keyboard.c
--- a/dlls/winex11.drv/keyboard.c	(revision 1719aef8cbc99994ec93848ae6e9e29e5c4beb78)
+++ b/dlls/winex11.drv/keyboard.c	(date 1714386707000)
@@ -62,6 +62,7 @@
 static const unsigned int ControlMask = 1 << 2;
 
 static int min_keycode, max_keycode, keysyms_per_keycode;
+static KeySym *key_mapping;
 static WORD keyc2vkey[256], keyc2scan[256];
 
 static int NumLockMask, ScrollLockMask, AltGrMask; /* mask in the XKeyEvent state */
@@ -1083,6 +1084,14 @@
     0, 0, 0, 0, 0, 0, 0, 0                                      /* 1008FFF8 */
 };
 
+static inline KeySym keycode_to_keysym( Display *display, KeyCode keycode, int index )
+{
+#ifdef HAVE_XKB
+    if (use_xkb) return XkbKeycodeToKeysym(display, keycode, 0, index);
+#endif
+    return key_mapping[(keycode - min_keycode) * keysyms_per_keycode + index];
+}
+
 /* Returns the Windows virtual key code associated with the X event <e> */
 /* kbd_section must be held */
 static WORD EVENT_event_to_vkey( XIC xic, XKeyEvent *e)
@@ -1467,13 +1476,13 @@
   for (keyc = min_keycode; keyc <= max_keycode; keyc++) {
       /* get data for keycode from X server */
       for (i = 0; i < syms; i++) {
-        if (!(keysym = XkbKeycodeToKeysym( display, keyc, 0, i ))) continue;
+        if (!(keysym = keycode_to_keysym ( display, keyc, i ))) continue;
 	/* Allow both one-byte and two-byte national keysyms */
 	if ((keysym < 0x8000) && (keysym != ' '))
         {
-            if (!XkbTranslateKeySym(display, &keysym, 0, &ckey[keyc][i], 1, NULL))
+            if (1)
             {
-                TRACE("XKB could not translate keysym %04lx\n", keysym);
+                // TRACE("XKB could not translate keysym %04lx\n", keysym);
                 /* FIXME: query what keysym is used as Mode_switch, fill XKeyEvent
                  * with appropriate ShiftMask and Mode_switch, use XLookupString
                  * to get character in the local encoding.
@@ -1586,7 +1595,9 @@
 
     pthread_mutex_lock( &kbd_mutex );
     XDisplayKeycodes(display, &min_keycode, &max_keycode);
-    XFree( XGetKeyboardMapping( display, min_keycode, max_keycode + 1 - min_keycode, &keysyms_per_keycode ) );
+    if (key_mapping) XFree( key_mapping );
+    key_mapping = XGetKeyboardMapping(display, min_keycode,
+                                      max_keycode + 1 - min_keycode, &keysyms_per_keycode);
 
     mmp = XGetModifierMapping(display);
     kcp = mmp->modifiermap;
@@ -1600,12 +1611,12 @@
 		int k;
 
 		for (k = 0; k < keysyms_per_keycode; k += 1)
-                    if (XkbKeycodeToKeysym( display, *kcp, 0, k ) == XK_Num_Lock)
+                    if (keycode_to_keysym( display, *kcp, k ) == XK_Num_Lock)
 		    {
                         NumLockMask = 1 << i;
                         TRACE_(key)("NumLockMask is %x\n", NumLockMask);
 		    }
-                    else if (XkbKeycodeToKeysym( display, *kcp, 0, k ) == XK_Scroll_Lock)
+                    else if (keycode_to_keysym( display, *kcp, k ) == XK_Scroll_Lock)
 		    {
                         ScrollLockMask = 1 << i;
                         TRACE_(key)("ScrollLockMask is %x\n", ScrollLockMask);
@@ -1657,10 +1668,10 @@
 	      /* we seem to need to search the layout-dependent scancodes */
 	      int maxlen=0,maxval=-1,ok;
 	      for (i=0; i<syms; i++) {
-		keysym = XkbKeycodeToKeysym( display, keyc, 0, i );
+		keysym = keycode_to_keysym( display, keyc, i );
 		if ((keysym<0x8000) && (keysym!=' '))
                 {
-                    if (!XkbTranslateKeySym(display, &keysym, 0, &ckey[i], 1, NULL))
+                    if (1)
                     {
                         /* FIXME: query what keysym is used as Mode_switch, fill XKeyEvent
                          * with appropriate ShiftMask and Mode_switch, use XLookupString
@@ -1807,7 +1818,7 @@
     for (scan = 0x60, keyc = min_keycode; keyc <= max_keycode; keyc++)
       if (keyc2vkey[keyc]&&!keyc2scan[keyc]) {
 	const char *ksname;
-	keysym = XkbKeycodeToKeysym( display, keyc, 0, 0 );
+	keysym = keycode_to_keysym( display, keyc, 0 );
 	ksname = XKeysymToString(keysym);
 	if (!ksname) ksname = "NoSymbol";
 
@@ -1915,7 +1926,7 @@
     }
 
     for (index = 0; index < 4; index++) /* find shift state */
-        if (XkbKeycodeToKeysym( display, keycode, 0, index ) == keysym) break;
+        if (keycode_to_keysym( display, keycode, index ) == keysym) break;
 
     pthread_mutex_unlock( &kbd_mutex );
 
@@ -2165,7 +2176,7 @@
       INT rc;
 
       keyc = (KeyCode) keyi;
-      keys = XkbKeycodeToKeysym( display, keyc, 0, 0 );
+      keys = keycode_to_keysym( display, keyc, 0 );
       name = XKeysymToString(keys);
 
       if (name && (vkey == VK_SHIFT || vkey == VK_CONTROL || vkey == VK_MENU))
